name: Examples Nightly Run Matrix

on:
  #push:
  workflow_dispatch:
    inputs:
      folders:
        description: 'Comma-separated list of folders'
        required: false
  schedule:
    - cron: '0 0 * * *' # Runs every day at midnight

env:
    LAST_COMMIT_HASH_FILE: /Users/rperera/repo/git_hash/git_hash.txt

jobs:
  check-commits: # Check for new commits since the last run
    runs-on: rakitha
    outputs:
      new_commits: ${{ steps.check_commits.outputs.new_commits }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get current commit hash
        id: get_current_commit
        run: echo "current_commit=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Get previous commit hash
        id: get_previous_commit
        run: |
          if [ -f $LAST_COMMIT_HASH_FILE ]; then
            previous_commit=$(cat $LAST_COMMIT_HASH_FILE)
          else
            previous_commit=""
          fi
          echo "previous_commit=$previous_commit" >> $GITHUB_OUTPUT

      - name: Compare commit hashes
        id: check_commits
        run: |
          if [ "${{ steps.get_previous_commit.outputs.previous_commit }}" = "${{ steps.get_current_commit.outputs.current_commit }}" ]; then
            echo "new_commits=0" >> $GITHUB_OUTPUT
          else
            echo "new_commits=1" >> $GITHUB_OUTPUT
          fi

      - name: Send notification if no new commits
        if: steps.check_commits.outputs.new_commits == '0' && github.event_name != 'workflow_dispatch'
        run: |
          echo "No new commits found. Sending notification to Teams."

      - name: Save current commit hash
        if: steps.check_commits.outputs.new_commits == '1'
        run: |
            mkdir -p $(dirname $LAST_COMMIT_HASH_FILE)
            echo "${{ steps.get_current_commit.outputs.current_commit }}" > $LAST_COMMIT_HASH_FILE
        continue-on-error: true

  process-folders: # Determine folders to process and pass them to the matrix
    runs-on: rakitha
    needs: check-commits
    outputs:
        folders: ${{ steps.determine_folders.outputs.folders }}
    if: needs.check-commits.outputs.new_commits == '1' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Determine folders to process
        id: determine_folders
        run: |
            if [ -n "${{ github.event.inputs.folders }}" ]; then
                folders_comma_separated="${{ github.event.inputs.folders }}"
            else
                folders=$(ls -d ./test_folders/E2E_EXP558*/)
                valid_folders=()
                for folder in $folders; do
                if [ -f "$folder/run_this_to_test.sh" ]; then
                    valid_folders+=($(basename "$folder"))
                fi
                done
                folders_comma_separated=$(IFS=,; echo "${valid_folders[*]}")
                              
            fi

            echo folder name comma separated: $folders_comma_separated 
            folders_json=$(echo $folders_comma_separated | jq -R 'split(",")')

            EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
            echo "folders<<$EOF" >> $GITHUB_OUTPUT
            echo "$folders_json" >> $GITHUB_OUTPUT
            echo "$EOF" >> $GITHUB_OUTPUT            

  examples-matrix: # Run the matrix job on the determined folders
      needs: process-folders    
      strategy:
        max-parallel: 2
        fail-fast: false
        matrix:
          example_name: ${{ fromJSON(needs.process-folders.outputs.folders) }}
      uses: ./.github/workflows/nightly-run.yml
      with:
        example_name: ${{ matrix.example_name }}
